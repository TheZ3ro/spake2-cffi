name: Upload Python Package

on:
  release:
    types: [published]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

permissions:
  contents: read
  id-token: write

jobs:

  sdist_create:
    name: Build package sdist
    runs-on: ubuntu-latest

    steps:
      - name: Checkout spake2 repository
        uses: actions/checkout@v3
        with:
          submodules: 'recursive'

      - name: Setup python environment
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"

      - name: Install dependencies
        run: |
          pip install --upgrade pip build

      - name: Build sdist
        run: |
          python -m build --sdist .

      - name: Verify sdist installation
        run: |
          python -m pip install dist/*.gz
          cd .. # Can't import src directory
          python -c "import spake2, sys; print(spake2.__version__); sys.exit(not(spake2.__title__ == 'spake2-cffi'))"

      - name: Upload sdist archive on Github
        uses: actions/upload-artifact@v3
        with:
          name: sdist
          path: "dist/*.tar.gz"
          if-no-files-found: error

  wheels_create:
    runs-on: ${{ matrix.os || 'ubuntu-22.04' }}
    name: Build wheel-${{ matrix.name }}

    env:
      MACOSX_DEPLOYMENT_TARGET: "10.9"
      CIBW_BUILD: "${{ matrix.cibw.build || '*' }}"
      CIBW_SKIP: "cp36-* cp37-* ${{ matrix.cibw.skip || '' }}"
      CIBW_ARCHS_LINUX: "${{ matrix.cibw.arch || 'auto' }}"
      CIBW_ARCHS_MACOS: "${{ matrix.cibw.arch || 'auto' }}"
      CIBW_MANYLINUX_X86_64_IMAGE: "${{ matrix.cibw.manylinux_x86_64_image || '' }}"

    strategy:
      fail-fast: false
      matrix:
        include:
          - os: macos-11
            name: mac-cpython
            cibw:
              build: "cp*"

          - os: macos-11
            name: mac-arm
            cibw:
              arch: universal2
              build: "cp*"

          - name: manylinux-x86_64
            cibw:
              arch: x86_64
              build: "*manylinux_x86_64"

          - name: manylinux_aarch64
            cibw:
              arch: aarch64
              build: "*manylinux_aarch64"

          - name: musllinux_x86_64
            cibw:
              arch: x86_64
              build: "*musllinux_x86_64"

          - name: musllinux_aarch64
            cibw:
              arch: aarch64
              build: "*musllinux_aarch64"

          #- os: windows-2019
          #  name: win_amd64
          #  architecture: x64
          #  cibw:
          #    build: "cp*win_amd64"

    steps:
      - name: Checkout spake2 repository
        uses: actions/checkout@v3
        with:
          submodules: 'recursive'

      - name: Set up QEMU
        if: ${{ matrix.cibw.arch == 'aarch64' }}
        uses: docker/setup-qemu-action@v1

      - name: Setup python environment
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"
          architecture: ${{ matrix.architecture }}

      - name: Customize mac-arm-64
        if: contains(matrix.os, 'macos') && matrix.cibw.arch
        run: |
          echo 'MACOSX_DEPLOYMENT_TARGET=10.15' >> "$GITHUB_ENV"

      - name: Build wheels
        uses: pypa/cibuildwheel@66b46d086804a9e9782354100d96a3a445431bca # v2.14.0

      - name: Upload wheels on Github
        uses: actions/upload-artifact@v3
        with:
          name: wheels-${{ matrix.name }}
          path: "wheelhouse/*"
          if-no-files-found: error

  publish:
    name: Publish package on PyPI
    runs-on: ubuntu-latest
    needs: [sdist_create, wheels_create]

    steps:
      - name: Download all build artifacts
        uses: actions/download-artifact@v3
        with:
          path: dist

      - name: Move artifacts
        run: |
          find . -name "*.gz" -exec mv {} dist/ \;
          find . -name "*.whl" -exec mv {} dist/ \;
          rm -rf dist/sdist/
          rm -rf dist/wheels-*
          ls -al dist/

      - name: Publish package
        uses: pypa/gh-action-pypi-publish@release/v1
